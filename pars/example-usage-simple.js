const HotlineParser = require('./simple-hotline-parser');

async function exampleUsage() {
    const parser = new HotlineParser();
    
    // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
    const products = [
        'samsung-galaxy-s21-fe-5g-6128gb-lavender-sm-g990blvd',
        'samsung-galaxy-a56-5g-8128gb-awesome-graphite-sm-a566bzka'
    ];
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä Hotline.ua');
    console.log('=' .repeat(50));
    
    for (const productPath of products) {
        try {
            console.log(`\nüì± –ü–∞—Ä—Å–∏–º –ø—Ä–æ–¥—É–∫—Ç: ${productPath}`);
            const offers = await parser.parseProduct(productPath);
            
            if (offers && offers.length > 0) {
                console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${offers.length} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π`);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ
                const sortedOffers = offers
                    .filter(offer => offer.price)
                    .sort((a, b) => a.price - b.price)
                    .slice(0, 3);
                
                console.log('\nüèÜ –¢–æ–ø-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ:');
                sortedOffers.forEach((offer, index) => {
                    console.log(`${index + 1}. ${offer.firmTitle} - ${offer.price} –≥—Ä–Ω`);
                    console.log(`   –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${offer.condition}`);
                    console.log(`   –î–æ—Å—Ç–∞–≤–∫–∞: ${offer.delivery}`);
                    console.log('');
                });
            } else {
                console.log('‚ùå –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ ${productPath}:`, error.message);
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000));
    }
    
    console.log('\nüéâ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (require.main === module) {
    exampleUsage().catch(console.error);
}

module.exports = { exampleUsage }; 