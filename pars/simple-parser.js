const HotlineParser = require('./hotline-parser');

// –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞
async function simpleExample() {
    const parser = new HotlineParser();
    
    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const data = await parser.getProducts(1, 10);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if (!data.data || !data.data.byPathSectionQueryProducts) {
            throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API');
        }
        
        const products = data.data.byPathSectionQueryProducts.collection;
        
        if (!products || !Array.isArray(products)) {
            console.error('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
            throw new Error('–ö–æ–ª–ª–µ–∫—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
        }
        
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º —Ç–æ–≤–∞—Ä–µ
        products.forEach((product, index) => {
            console.log(`\n${index + 1}. ${product.title}`);
            console.log(`   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: ${product.vendor?.title || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
            console.log(`   –¶–µ–Ω–∞: ${product.minPrice || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'} –≥—Ä–Ω`);
            console.log(`   –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${product.offerCount || 0}`);
            console.log(`   URL: ${product.url || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        await parser.saveToFile(products, 'test-products.json');
        console.log('\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ test-products.json');
        
        // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        await parser.saveToFile(data, 'full-response.json');
        console.log('üíæ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ full-response.json');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        console.error('–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä
simpleExample(); 