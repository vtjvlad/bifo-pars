#!/usr/bin/env node

const fs = require('fs').promises;
const SimpleCLI = require('./cli-simple');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testCategories = [
    'https://hotline.ua/mobile/mobilnye-telefony-i-smartfony/',
    'https://hotline.ua/computer/noutbuki-netbuki/',
    'https://hotline.ua/computer/planshety/'
];

async function runTests() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...\n');

    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    console.log('üìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
    try {
        await fs.writeFile('categories.txt', testCategories.join('\n'));
        console.log('‚úÖ –§–∞–π–ª categories.txt —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message);
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    console.log('\nüìñ –¢–µ—Å—Ç 2: –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
    try {
        const content = await fs.readFile('categories.txt', 'utf8');
        const categories = content
            .split('\n')
            .map(line => line.trim())
            .filter(line => line.length > 0 && !line.startsWith('#'))
            .filter(line => line.includes('hotline.ua'));
        
        console.log(`‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π:`);
        categories.forEach((url, index) => {
            console.log(`   ${index + 1}. ${url}`);
        });
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ CLI –∫–ª–∞—Å—Å–∞
    console.log('\nüéÆ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ CLI –∫–ª–∞—Å—Å–∞');
    try {
        const cli = new SimpleCLI();
        console.log('‚úÖ CLI –∫–ª–∞—Å—Å —Å–æ–∑–¥–∞–Ω');
        console.log(`   –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞: ${cli.config.batchSize}`);
        console.log(`   –ê–≤—Ç–æ–ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤: ${cli.config.autoGetTokens}`);
        console.log(`   –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: ${cli.config.saveProgressively}`);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è CLI:', error.message);
    }

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–≤–µ—Ç–æ–≤
    console.log('\nüé® –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–≤–µ—Ç–æ–≤');
    try {
        const cli = new SimpleCLI();
        console.log(cli.colors.blue('–°–∏–Ω–∏–π —Ç–µ–∫—Å—Ç'));
        console.log(cli.colors.green('–ó–µ–ª–µ–Ω—ã–π —Ç–µ–∫—Å—Ç'));
        console.log(cli.colors.red('–ö—Ä–∞—Å–Ω—ã–π —Ç–µ–∫—Å—Ç'));
        console.log(cli.colors.yellow('–ñ–µ–ª—Ç—ã–π —Ç–µ–∫—Å—Ç'));
        console.log(cli.colors.cyan('–ì–æ–ª—É–±–æ–π —Ç–µ–∫—Å—Ç'));
        console.log('‚úÖ –¶–≤–µ—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç');
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Ü–≤–µ—Ç–æ–≤:', error.message);
    }

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞
    console.log('\nüîß –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞');
    try {
        const HotlineParser = require('./hotline-parser');
        const parser = new HotlineParser();
        console.log('‚úÖ –ü–∞—Ä—Å–µ—Ä —Å–æ–∑–¥–∞–Ω');
        
        // –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø—É—Ç–∏
        const testUrl = 'https://hotline.ua/mobile/mobilnye-telefony-i-smartfony/';
        const path = parser.extractPathFromUrl(testUrl);
        console.log(`   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –ø—É—Ç—å: ${path}`);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞:', error.message);
    }

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
    console.log('\nüìÅ –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫');
    try {
        const folders = ['JSON', 'CSV'];
        for (const folder of folders) {
            try {
                await fs.access(folder);
                console.log(`‚úÖ –ü–∞–ø–∫–∞ ${folder} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
            } catch {
                await fs.mkdir(folder, { recursive: true });
                console.log(`‚úÖ –ü–∞–ø–∫–∞ ${folder} —Å–æ–∑–¥–∞–Ω–∞`);
            }
        }
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞–ø–æ–∫:', error.message);
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node cli-simple.js');
    console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é 2 –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    console.log('3. –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–∞—Ö JSON/ –∏ CSV/');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
    runTests().catch(console.error);
}

module.exports = runTests; 