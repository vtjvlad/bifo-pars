const HotlineParser = require('./hotline-parser');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async function testTokenExtraction() {
    const parser = new HotlineParser();
    
    const testCategories = [
        'https://hotline.ua/mobile/mobilnye-telefony-i-smartfony/',
        'https://hotline.ua/computer/noutbuki/',
        'https://hotline.ua/computer/planshety/'
    ];
    
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:');
    console.log('=' .repeat(60));
    
    for (let i = 0; i < testCategories.length; i++) {
        const categoryUrl = testCategories[i];
        const categoryName = parser.extractPathFromUrl(categoryUrl);
        
        console.log(`\nüì¶ [${i + 1}/${testCategories.length}] –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryName}`);
        console.log(`üîó URL: ${categoryUrl}`);
        
        try {
            const tokens = await parser.getTokensForCategory(categoryUrl);
            
            console.log(`‚úÖ x-token: ${tokens['x-token'] ? tokens['x-token'].substring(0, 20) + '...' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
            console.log(`‚úÖ x-request-id: ${tokens['x-request-id'] ? tokens['x-request-id'].substring(0, 20) + '...' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã —Ä–∞–∑–Ω—ã–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            if (i > 0) {
                const prevTokens = await parser.getTokensForCategory(testCategories[i-1]);
                const tokenChanged = tokens['x-token'] !== prevTokens['x-token'];
                console.log(`üîÑ –¢–æ–∫–µ–Ω—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å: ${tokenChanged ? '–î–ê' : '–ù–ï–¢'}`);
            }
            
        } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
        
        console.log('---');
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        if (i < testCategories.length - 1) {
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

testTokenExtraction().catch(console.error); 